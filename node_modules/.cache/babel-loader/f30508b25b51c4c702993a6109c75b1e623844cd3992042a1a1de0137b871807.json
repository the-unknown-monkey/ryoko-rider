{"ast":null,"code":"import $g1Vy2$babelruntimehelpersesmextends from \"@babel/runtime/helpers/esm/extends\";\nimport { forwardRef as $g1Vy2$forwardRef, useState as $g1Vy2$useState, useRef as $g1Vy2$useRef, createElement as $g1Vy2$createElement, useMemo as $g1Vy2$useMemo, useEffect as $g1Vy2$useEffect } from \"react\";\nimport { clamp as $g1Vy2$clamp } from \"@radix-ui/number\";\nimport { composeEventHandlers as $g1Vy2$composeEventHandlers } from \"@radix-ui/primitive\";\nimport { useComposedRefs as $g1Vy2$useComposedRefs } from \"@radix-ui/react-compose-refs\";\nimport { createContextScope as $g1Vy2$createContextScope } from \"@radix-ui/react-context\";\nimport { useControllableState as $g1Vy2$useControllableState } from \"@radix-ui/react-use-controllable-state\";\nimport { useDirection as $g1Vy2$useDirection } from \"@radix-ui/react-direction\";\nimport { usePrevious as $g1Vy2$usePrevious } from \"@radix-ui/react-use-previous\";\nimport { useSize as $g1Vy2$useSize } from \"@radix-ui/react-use-size\";\nimport { Primitive as $g1Vy2$Primitive } from \"@radix-ui/react-primitive\";\nimport { createCollection as $g1Vy2$createCollection } from \"@radix-ui/react-collection\";\nconst $faa2e61a3361514f$var$PAGE_KEYS = ['PageUp', 'PageDown'];\nconst $faa2e61a3361514f$var$ARROW_KEYS = ['ArrowUp', 'ArrowDown', 'ArrowLeft', 'ArrowRight'];\nconst $faa2e61a3361514f$var$BACK_KEYS = {\n  'from-left': ['Home', 'PageDown', 'ArrowDown', 'ArrowLeft'],\n  'from-right': ['Home', 'PageDown', 'ArrowDown', 'ArrowRight'],\n  'from-bottom': ['Home', 'PageDown', 'ArrowDown', 'ArrowLeft'],\n  'from-top': ['Home', 'PageDown', 'ArrowUp', 'ArrowLeft']\n};\n/* -------------------------------------------------------------------------------------------------\n * Slider\n * -----------------------------------------------------------------------------------------------*/\nconst $faa2e61a3361514f$var$SLIDER_NAME = 'Slider';\nconst [$faa2e61a3361514f$var$Collection, $faa2e61a3361514f$var$useCollection, $faa2e61a3361514f$var$createCollectionScope] = $g1Vy2$createCollection($faa2e61a3361514f$var$SLIDER_NAME);\nconst [$faa2e61a3361514f$var$createSliderContext, $faa2e61a3361514f$export$ef72632d7b901f97] = $g1Vy2$createContextScope($faa2e61a3361514f$var$SLIDER_NAME, [$faa2e61a3361514f$var$createCollectionScope]);\nconst [$faa2e61a3361514f$var$SliderProvider, $faa2e61a3361514f$var$useSliderContext] = $faa2e61a3361514f$var$createSliderContext($faa2e61a3361514f$var$SLIDER_NAME);\nconst $faa2e61a3361514f$export$472062a354075cee = /*#__PURE__*/$g1Vy2$forwardRef((props, forwardedRef) => {\n  const {\n    name: name,\n    min = 0,\n    max = 100,\n    step = 1,\n    orientation = 'horizontal',\n    disabled = false,\n    minStepsBetweenThumbs = 0,\n    defaultValue = [min],\n    value: value1,\n    onValueChange = () => {},\n    onValueCommit = () => {},\n    inverted = false,\n    ...sliderProps\n  } = props;\n  const [slider, setSlider] = $g1Vy2$useState(null);\n  const composedRefs = $g1Vy2$useComposedRefs(forwardedRef, node => setSlider(node));\n  const thumbRefs = $g1Vy2$useRef(new Set());\n  const valueIndexToChangeRef = $g1Vy2$useRef(0);\n  const isHorizontal = orientation === 'horizontal'; // We set this to true by default so that events bubble to forms without JS (SSR)\n  const isFormControl = slider ? Boolean(slider.closest('form')) : true;\n  const SliderOrientation = isHorizontal ? $faa2e61a3361514f$var$SliderHorizontal : $faa2e61a3361514f$var$SliderVertical;\n  const [values = [], setValues] = $g1Vy2$useControllableState({\n    prop: value1,\n    defaultProp: defaultValue,\n    onChange: value => {\n      var _thumbs$valueIndexToC;\n      const thumbs = [...thumbRefs.current];\n      (_thumbs$valueIndexToC = thumbs[valueIndexToChangeRef.current]) === null || _thumbs$valueIndexToC === void 0 || _thumbs$valueIndexToC.focus();\n      onValueChange(value);\n    }\n  });\n  const valuesBeforeSlideStartRef = $g1Vy2$useRef(values);\n  function handleSlideStart(value) {\n    const closestIndex = $faa2e61a3361514f$var$getClosestValueIndex(values, value);\n    updateValues(value, closestIndex);\n  }\n  function handleSlideMove(value) {\n    updateValues(value, valueIndexToChangeRef.current);\n  }\n  function handleSlideEnd() {\n    const prevValue = valuesBeforeSlideStartRef.current[valueIndexToChangeRef.current];\n    const nextValue = values[valueIndexToChangeRef.current];\n    const hasChanged = nextValue !== prevValue;\n    if (hasChanged) onValueCommit(values);\n  }\n  function updateValues(value, atIndex) {\n    let {\n      commit: commit\n    } = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {\n      commit: false\n    };\n    const decimalCount = $faa2e61a3361514f$var$getDecimalCount(step);\n    const snapToStep = $faa2e61a3361514f$var$roundValue(Math.round((value - min) / step) * step + min, decimalCount);\n    const nextValue = $g1Vy2$clamp(snapToStep, [min, max]);\n    setValues(function () {\n      let prevValues = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n      const nextValues = $faa2e61a3361514f$var$getNextSortedValues(prevValues, nextValue, atIndex);\n      if ($faa2e61a3361514f$var$hasMinStepsBetweenValues(nextValues, minStepsBetweenThumbs * step)) {\n        valueIndexToChangeRef.current = nextValues.indexOf(nextValue);\n        const hasChanged = String(nextValues) !== String(prevValues);\n        if (hasChanged && commit) onValueCommit(nextValues);\n        return hasChanged ? nextValues : prevValues;\n      } else return prevValues;\n    });\n  }\n  return /*#__PURE__*/$g1Vy2$createElement($faa2e61a3361514f$var$SliderProvider, {\n    scope: props.__scopeSlider,\n    disabled: disabled,\n    min: min,\n    max: max,\n    valueIndexToChangeRef: valueIndexToChangeRef,\n    thumbs: thumbRefs.current,\n    values: values,\n    orientation: orientation\n  }, /*#__PURE__*/$g1Vy2$createElement($faa2e61a3361514f$var$Collection.Provider, {\n    scope: props.__scopeSlider\n  }, /*#__PURE__*/$g1Vy2$createElement($faa2e61a3361514f$var$Collection.Slot, {\n    scope: props.__scopeSlider\n  }, /*#__PURE__*/$g1Vy2$createElement(SliderOrientation, $g1Vy2$babelruntimehelpersesmextends({\n    \"aria-disabled\": disabled,\n    \"data-disabled\": disabled ? '' : undefined\n  }, sliderProps, {\n    ref: composedRefs,\n    onPointerDown: $g1Vy2$composeEventHandlers(sliderProps.onPointerDown, () => {\n      if (!disabled) valuesBeforeSlideStartRef.current = values;\n    }),\n    min: min,\n    max: max,\n    inverted: inverted,\n    onSlideStart: disabled ? undefined : handleSlideStart,\n    onSlideMove: disabled ? undefined : handleSlideMove,\n    onSlideEnd: disabled ? undefined : handleSlideEnd,\n    onHomeKeyDown: () => !disabled && updateValues(min, 0, {\n      commit: true\n    }),\n    onEndKeyDown: () => !disabled && updateValues(max, values.length - 1, {\n      commit: true\n    }),\n    onStepKeyDown: _ref => {\n      let {\n        event: event,\n        direction: stepDirection\n      } = _ref;\n      if (!disabled) {\n        const isPageKey = $faa2e61a3361514f$var$PAGE_KEYS.includes(event.key);\n        const isSkipKey = isPageKey || event.shiftKey && $faa2e61a3361514f$var$ARROW_KEYS.includes(event.key);\n        const multiplier = isSkipKey ? 10 : 1;\n        const atIndex = valueIndexToChangeRef.current;\n        const value = values[atIndex];\n        const stepInDirection = step * multiplier * stepDirection;\n        updateValues(value + stepInDirection, atIndex, {\n          commit: true\n        });\n      }\n    }\n  })))), isFormControl && values.map((value, index) => /*#__PURE__*/$g1Vy2$createElement($faa2e61a3361514f$var$BubbleInput, {\n    key: index,\n    name: name ? name + (values.length > 1 ? '[]' : '') : undefined,\n    value: value\n  })));\n});\n/*#__PURE__*/\nObject.assign($faa2e61a3361514f$export$472062a354075cee, {\n  displayName: $faa2e61a3361514f$var$SLIDER_NAME\n});\n/* -------------------------------------------------------------------------------------------------\n * SliderHorizontal\n * -----------------------------------------------------------------------------------------------*/\nconst [$faa2e61a3361514f$var$SliderOrientationProvider, $faa2e61a3361514f$var$useSliderOrientationContext] = $faa2e61a3361514f$var$createSliderContext($faa2e61a3361514f$var$SLIDER_NAME, {\n  startEdge: 'left',\n  endEdge: 'right',\n  size: 'width',\n  direction: 1\n});\nconst $faa2e61a3361514f$var$SliderHorizontal = /*#__PURE__*/$g1Vy2$forwardRef((props, forwardedRef) => {\n  const {\n    min: min,\n    max: max,\n    dir: dir,\n    inverted: inverted,\n    onSlideStart: onSlideStart,\n    onSlideMove: onSlideMove,\n    onSlideEnd: onSlideEnd,\n    onStepKeyDown: onStepKeyDown,\n    ...sliderProps\n  } = props;\n  const [slider, setSlider] = $g1Vy2$useState(null);\n  const composedRefs = $g1Vy2$useComposedRefs(forwardedRef, node => setSlider(node));\n  const rectRef = $g1Vy2$useRef();\n  const direction = $g1Vy2$useDirection(dir);\n  const isDirectionLTR = direction === 'ltr';\n  const isSlidingFromLeft = isDirectionLTR && !inverted || !isDirectionLTR && inverted;\n  function getValueFromPointer(pointerPosition) {\n    const rect = rectRef.current || slider.getBoundingClientRect();\n    const input = [0, rect.width];\n    const output = isSlidingFromLeft ? [min, max] : [max, min];\n    const value = $faa2e61a3361514f$var$linearScale(input, output);\n    rectRef.current = rect;\n    return value(pointerPosition - rect.left);\n  }\n  return /*#__PURE__*/$g1Vy2$createElement($faa2e61a3361514f$var$SliderOrientationProvider, {\n    scope: props.__scopeSlider,\n    startEdge: isSlidingFromLeft ? 'left' : 'right',\n    endEdge: isSlidingFromLeft ? 'right' : 'left',\n    direction: isSlidingFromLeft ? 1 : -1,\n    size: \"width\"\n  }, /*#__PURE__*/$g1Vy2$createElement($faa2e61a3361514f$var$SliderImpl, $g1Vy2$babelruntimehelpersesmextends({\n    dir: direction,\n    \"data-orientation\": \"horizontal\"\n  }, sliderProps, {\n    ref: composedRefs,\n    style: {\n      ...sliderProps.style,\n      ['--radix-slider-thumb-transform']: 'translateX(-50%)'\n    },\n    onSlideStart: event => {\n      const value = getValueFromPointer(event.clientX);\n      onSlideStart === null || onSlideStart === void 0 || onSlideStart(value);\n    },\n    onSlideMove: event => {\n      const value = getValueFromPointer(event.clientX);\n      onSlideMove === null || onSlideMove === void 0 || onSlideMove(value);\n    },\n    onSlideEnd: () => {\n      rectRef.current = undefined;\n      onSlideEnd === null || onSlideEnd === void 0 || onSlideEnd();\n    },\n    onStepKeyDown: event => {\n      const slideDirection = isSlidingFromLeft ? 'from-left' : 'from-right';\n      const isBackKey = $faa2e61a3361514f$var$BACK_KEYS[slideDirection].includes(event.key);\n      onStepKeyDown === null || onStepKeyDown === void 0 || onStepKeyDown({\n        event: event,\n        direction: isBackKey ? -1 : 1\n      });\n    }\n  })));\n});\n/* -------------------------------------------------------------------------------------------------\n * SliderVertical\n * -----------------------------------------------------------------------------------------------*/\nconst $faa2e61a3361514f$var$SliderVertical = /*#__PURE__*/$g1Vy2$forwardRef((props, forwardedRef) => {\n  const {\n    min: min,\n    max: max,\n    inverted: inverted,\n    onSlideStart: onSlideStart,\n    onSlideMove: onSlideMove,\n    onSlideEnd: onSlideEnd,\n    onStepKeyDown: onStepKeyDown,\n    ...sliderProps\n  } = props;\n  const sliderRef = $g1Vy2$useRef(null);\n  const ref = $g1Vy2$useComposedRefs(forwardedRef, sliderRef);\n  const rectRef = $g1Vy2$useRef();\n  const isSlidingFromBottom = !inverted;\n  function getValueFromPointer(pointerPosition) {\n    const rect = rectRef.current || sliderRef.current.getBoundingClientRect();\n    const input = [0, rect.height];\n    const output = isSlidingFromBottom ? [max, min] : [min, max];\n    const value = $faa2e61a3361514f$var$linearScale(input, output);\n    rectRef.current = rect;\n    return value(pointerPosition - rect.top);\n  }\n  return /*#__PURE__*/$g1Vy2$createElement($faa2e61a3361514f$var$SliderOrientationProvider, {\n    scope: props.__scopeSlider,\n    startEdge: isSlidingFromBottom ? 'bottom' : 'top',\n    endEdge: isSlidingFromBottom ? 'top' : 'bottom',\n    size: \"height\",\n    direction: isSlidingFromBottom ? 1 : -1\n  }, /*#__PURE__*/$g1Vy2$createElement($faa2e61a3361514f$var$SliderImpl, $g1Vy2$babelruntimehelpersesmextends({\n    \"data-orientation\": \"vertical\"\n  }, sliderProps, {\n    ref: ref,\n    style: {\n      ...sliderProps.style,\n      ['--radix-slider-thumb-transform']: 'translateY(50%)'\n    },\n    onSlideStart: event => {\n      const value = getValueFromPointer(event.clientY);\n      onSlideStart === null || onSlideStart === void 0 || onSlideStart(value);\n    },\n    onSlideMove: event => {\n      const value = getValueFromPointer(event.clientY);\n      onSlideMove === null || onSlideMove === void 0 || onSlideMove(value);\n    },\n    onSlideEnd: () => {\n      rectRef.current = undefined;\n      onSlideEnd === null || onSlideEnd === void 0 || onSlideEnd();\n    },\n    onStepKeyDown: event => {\n      const slideDirection = isSlidingFromBottom ? 'from-bottom' : 'from-top';\n      const isBackKey = $faa2e61a3361514f$var$BACK_KEYS[slideDirection].includes(event.key);\n      onStepKeyDown === null || onStepKeyDown === void 0 || onStepKeyDown({\n        event: event,\n        direction: isBackKey ? -1 : 1\n      });\n    }\n  })));\n});\n/* -------------------------------------------------------------------------------------------------\n * SliderImpl\n * -----------------------------------------------------------------------------------------------*/\nconst $faa2e61a3361514f$var$SliderImpl = /*#__PURE__*/$g1Vy2$forwardRef((props, forwardedRef) => {\n  const {\n    __scopeSlider: __scopeSlider,\n    onSlideStart: onSlideStart,\n    onSlideMove: onSlideMove,\n    onSlideEnd: onSlideEnd,\n    onHomeKeyDown: onHomeKeyDown,\n    onEndKeyDown: onEndKeyDown,\n    onStepKeyDown: onStepKeyDown,\n    ...sliderProps\n  } = props;\n  const context = $faa2e61a3361514f$var$useSliderContext($faa2e61a3361514f$var$SLIDER_NAME, __scopeSlider);\n  return /*#__PURE__*/$g1Vy2$createElement($g1Vy2$Primitive.span, $g1Vy2$babelruntimehelpersesmextends({}, sliderProps, {\n    ref: forwardedRef,\n    onKeyDown: $g1Vy2$composeEventHandlers(props.onKeyDown, event => {\n      if (event.key === 'Home') {\n        onHomeKeyDown(event); // Prevent scrolling to page start\n        event.preventDefault();\n      } else if (event.key === 'End') {\n        onEndKeyDown(event); // Prevent scrolling to page end\n        event.preventDefault();\n      } else if ($faa2e61a3361514f$var$PAGE_KEYS.concat($faa2e61a3361514f$var$ARROW_KEYS).includes(event.key)) {\n        onStepKeyDown(event); // Prevent scrolling for directional key presses\n        event.preventDefault();\n      }\n    }),\n    onPointerDown: $g1Vy2$composeEventHandlers(props.onPointerDown, event => {\n      const target = event.target;\n      target.setPointerCapture(event.pointerId); // Prevent browser focus behaviour because we focus a thumb manually when values change.\n      event.preventDefault(); // Touch devices have a delay before focusing so won't focus if touch immediately moves\n      // away from target (sliding). We want thumb to focus regardless.\n      if (context.thumbs.has(target)) target.focus();else onSlideStart(event);\n    }),\n    onPointerMove: $g1Vy2$composeEventHandlers(props.onPointerMove, event => {\n      const target = event.target;\n      if (target.hasPointerCapture(event.pointerId)) onSlideMove(event);\n    }),\n    onPointerUp: $g1Vy2$composeEventHandlers(props.onPointerUp, event => {\n      const target = event.target;\n      if (target.hasPointerCapture(event.pointerId)) {\n        target.releasePointerCapture(event.pointerId);\n        onSlideEnd(event);\n      }\n    })\n  }));\n});\n/* -------------------------------------------------------------------------------------------------\n * SliderTrack\n * -----------------------------------------------------------------------------------------------*/\nconst $faa2e61a3361514f$var$TRACK_NAME = 'SliderTrack';\nconst $faa2e61a3361514f$export$105594979f116971 = /*#__PURE__*/$g1Vy2$forwardRef((props, forwardedRef) => {\n  const {\n    __scopeSlider: __scopeSlider,\n    ...trackProps\n  } = props;\n  const context = $faa2e61a3361514f$var$useSliderContext($faa2e61a3361514f$var$TRACK_NAME, __scopeSlider);\n  return /*#__PURE__*/$g1Vy2$createElement($g1Vy2$Primitive.span, $g1Vy2$babelruntimehelpersesmextends({\n    \"data-disabled\": context.disabled ? '' : undefined,\n    \"data-orientation\": context.orientation\n  }, trackProps, {\n    ref: forwardedRef\n  }));\n});\n/*#__PURE__*/\nObject.assign($faa2e61a3361514f$export$105594979f116971, {\n  displayName: $faa2e61a3361514f$var$TRACK_NAME\n});\n/* -------------------------------------------------------------------------------------------------\n * SliderRange\n * -----------------------------------------------------------------------------------------------*/\nconst $faa2e61a3361514f$var$RANGE_NAME = 'SliderRange';\nconst $faa2e61a3361514f$export$a5cf38a7a000fe77 = /*#__PURE__*/$g1Vy2$forwardRef((props, forwardedRef) => {\n  const {\n    __scopeSlider: __scopeSlider,\n    ...rangeProps\n  } = props;\n  const context = $faa2e61a3361514f$var$useSliderContext($faa2e61a3361514f$var$RANGE_NAME, __scopeSlider);\n  const orientation = $faa2e61a3361514f$var$useSliderOrientationContext($faa2e61a3361514f$var$RANGE_NAME, __scopeSlider);\n  const ref = $g1Vy2$useRef(null);\n  const composedRefs = $g1Vy2$useComposedRefs(forwardedRef, ref);\n  const valuesCount = context.values.length;\n  const percentages = context.values.map(value => $faa2e61a3361514f$var$convertValueToPercentage(value, context.min, context.max));\n  const offsetStart = valuesCount > 1 ? Math.min(...percentages) : 0;\n  const offsetEnd = 100 - Math.max(...percentages);\n  return /*#__PURE__*/$g1Vy2$createElement($g1Vy2$Primitive.span, $g1Vy2$babelruntimehelpersesmextends({\n    \"data-orientation\": context.orientation,\n    \"data-disabled\": context.disabled ? '' : undefined\n  }, rangeProps, {\n    ref: composedRefs,\n    style: {\n      ...props.style,\n      [orientation.startEdge]: offsetStart + '%',\n      [orientation.endEdge]: offsetEnd + '%'\n    }\n  }));\n});\n/*#__PURE__*/\nObject.assign($faa2e61a3361514f$export$a5cf38a7a000fe77, {\n  displayName: $faa2e61a3361514f$var$RANGE_NAME\n});\n/* -------------------------------------------------------------------------------------------------\n * SliderThumb\n * -----------------------------------------------------------------------------------------------*/\nconst $faa2e61a3361514f$var$THUMB_NAME = 'SliderThumb';\nconst $faa2e61a3361514f$export$2c1b491743890dec = /*#__PURE__*/$g1Vy2$forwardRef((props, forwardedRef) => {\n  const getItems = $faa2e61a3361514f$var$useCollection(props.__scopeSlider);\n  const [thumb, setThumb] = $g1Vy2$useState(null);\n  const composedRefs = $g1Vy2$useComposedRefs(forwardedRef, node => setThumb(node));\n  const index = $g1Vy2$useMemo(() => thumb ? getItems().findIndex(item => item.ref.current === thumb) : -1, [getItems, thumb]);\n  return /*#__PURE__*/$g1Vy2$createElement($faa2e61a3361514f$var$SliderThumbImpl, $g1Vy2$babelruntimehelpersesmextends({}, props, {\n    ref: composedRefs,\n    index: index\n  }));\n});\nconst $faa2e61a3361514f$var$SliderThumbImpl = /*#__PURE__*/$g1Vy2$forwardRef((props, forwardedRef) => {\n  const {\n    __scopeSlider: __scopeSlider,\n    index: index,\n    ...thumbProps\n  } = props;\n  const context = $faa2e61a3361514f$var$useSliderContext($faa2e61a3361514f$var$THUMB_NAME, __scopeSlider);\n  const orientation = $faa2e61a3361514f$var$useSliderOrientationContext($faa2e61a3361514f$var$THUMB_NAME, __scopeSlider);\n  const [thumb, setThumb] = $g1Vy2$useState(null);\n  const composedRefs = $g1Vy2$useComposedRefs(forwardedRef, node => setThumb(node));\n  const size = $g1Vy2$useSize(thumb); // We cast because index could be `-1` which would return undefined\n  const value = context.values[index];\n  const percent = value === undefined ? 0 : $faa2e61a3361514f$var$convertValueToPercentage(value, context.min, context.max);\n  const label = $faa2e61a3361514f$var$getLabel(index, context.values.length);\n  const orientationSize = size === null || size === void 0 ? void 0 : size[orientation.size];\n  const thumbInBoundsOffset = orientationSize ? $faa2e61a3361514f$var$getThumbInBoundsOffset(orientationSize, percent, orientation.direction) : 0;\n  $g1Vy2$useEffect(() => {\n    if (thumb) {\n      context.thumbs.add(thumb);\n      return () => {\n        context.thumbs.delete(thumb);\n      };\n    }\n  }, [thumb, context.thumbs]);\n  return /*#__PURE__*/$g1Vy2$createElement(\"span\", {\n    style: {\n      transform: 'var(--radix-slider-thumb-transform)',\n      position: 'absolute',\n      [orientation.startEdge]: `calc(${percent}% + ${thumbInBoundsOffset}px)`\n    }\n  }, /*#__PURE__*/$g1Vy2$createElement($faa2e61a3361514f$var$Collection.ItemSlot, {\n    scope: props.__scopeSlider\n  }, /*#__PURE__*/$g1Vy2$createElement($g1Vy2$Primitive.span, $g1Vy2$babelruntimehelpersesmextends({\n    role: \"slider\",\n    \"aria-label\": props['aria-label'] || label,\n    \"aria-valuemin\": context.min,\n    \"aria-valuenow\": value,\n    \"aria-valuemax\": context.max,\n    \"aria-orientation\": context.orientation,\n    \"data-orientation\": context.orientation,\n    \"data-disabled\": context.disabled ? '' : undefined,\n    tabIndex: context.disabled ? undefined : 0\n  }, thumbProps, {\n    ref: composedRefs,\n    style: value === undefined ? {\n      display: 'none'\n    } : props.style,\n    onFocus: $g1Vy2$composeEventHandlers(props.onFocus, () => {\n      context.valueIndexToChangeRef.current = index;\n    })\n  }))));\n});\n/*#__PURE__*/\nObject.assign($faa2e61a3361514f$export$2c1b491743890dec, {\n  displayName: $faa2e61a3361514f$var$THUMB_NAME\n});\n/* -----------------------------------------------------------------------------------------------*/\nconst $faa2e61a3361514f$var$BubbleInput = props => {\n  const {\n    value: value,\n    ...inputProps\n  } = props;\n  const ref = $g1Vy2$useRef(null);\n  const prevValue = $g1Vy2$usePrevious(value); // Bubble value change to parents (e.g form change event)\n  $g1Vy2$useEffect(() => {\n    const input = ref.current;\n    const inputProto = window.HTMLInputElement.prototype;\n    const descriptor = Object.getOwnPropertyDescriptor(inputProto, 'value');\n    const setValue = descriptor.set;\n    if (prevValue !== value && setValue) {\n      const event = new Event('input', {\n        bubbles: true\n      });\n      setValue.call(input, value);\n      input.dispatchEvent(event);\n    }\n  }, [prevValue, value]);\n  /**\n  * We purposefully do not use `type=\"hidden\"` here otherwise forms that\n  * wrap it will not be able to access its value via the FormData API.\n  *\n  * We purposefully do not add the `value` attribute here to allow the value\n  * to be set programatically and bubble to any parent form `onChange` event.\n  * Adding the `value` will cause React to consider the programatic\n  * dispatch a duplicate and it will get swallowed.\n  */\n  return /*#__PURE__*/$g1Vy2$createElement(\"input\", $g1Vy2$babelruntimehelpersesmextends({\n    style: {\n      display: 'none'\n    }\n  }, inputProps, {\n    ref: ref,\n    defaultValue: value\n  }));\n};\nfunction $faa2e61a3361514f$var$getNextSortedValues() {\n  let prevValues = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  let nextValue = arguments.length > 1 ? arguments[1] : undefined;\n  let atIndex = arguments.length > 2 ? arguments[2] : undefined;\n  const nextValues = [...prevValues];\n  nextValues[atIndex] = nextValue;\n  return nextValues.sort((a, b) => a - b);\n}\nfunction $faa2e61a3361514f$var$convertValueToPercentage(value, min, max) {\n  const maxSteps = max - min;\n  const percentPerStep = 100 / maxSteps;\n  return percentPerStep * (value - min);\n}\n/**\n * Returns a label for each thumb when there are two or more thumbs\n */\nfunction $faa2e61a3361514f$var$getLabel(index, totalValues) {\n  if (totalValues > 2) return `Value ${index + 1} of ${totalValues}`;else if (totalValues === 2) return ['Minimum', 'Maximum'][index];else return undefined;\n}\n/**\n * Given a `values` array and a `nextValue`, determine which value in\n * the array is closest to `nextValue` and return its index.\n *\n * @example\n * // returns 1\n * getClosestValueIndex([10, 30], 25);\n */\nfunction $faa2e61a3361514f$var$getClosestValueIndex(values, nextValue) {\n  if (values.length === 1) return 0;\n  const distances = values.map(value => Math.abs(value - nextValue));\n  const closestDistance = Math.min(...distances);\n  return distances.indexOf(closestDistance);\n}\n/**\n * Offsets the thumb centre point while sliding to ensure it remains\n * within the bounds of the slider when reaching the edges\n */\nfunction $faa2e61a3361514f$var$getThumbInBoundsOffset(width, left, direction) {\n  const halfWidth = width / 2;\n  const halfPercent = 50;\n  const offset = $faa2e61a3361514f$var$linearScale([0, halfPercent], [0, halfWidth]);\n  return (halfWidth - offset(left) * direction) * direction;\n}\n/**\n * Gets an array of steps between each value.\n *\n * @example\n * // returns [1, 9]\n * getStepsBetweenValues([10, 11, 20]);\n */\nfunction $faa2e61a3361514f$var$getStepsBetweenValues(values) {\n  return values.slice(0, -1).map((value, index) => values[index + 1] - value);\n}\n/**\n * Verifies the minimum steps between all values is greater than or equal\n * to the expected minimum steps.\n *\n * @example\n * // returns false\n * hasMinStepsBetweenValues([1,2,3], 2);\n *\n * @example\n * // returns true\n * hasMinStepsBetweenValues([1,2,3], 1);\n */\nfunction $faa2e61a3361514f$var$hasMinStepsBetweenValues(values, minStepsBetweenValues) {\n  if (minStepsBetweenValues > 0) {\n    const stepsBetweenValues = $faa2e61a3361514f$var$getStepsBetweenValues(values);\n    const actualMinStepsBetweenValues = Math.min(...stepsBetweenValues);\n    return actualMinStepsBetweenValues >= minStepsBetweenValues;\n  }\n  return true;\n} // https://github.com/tmcw-up-for-adoption/simple-linear-scale/blob/master/index.js\nfunction $faa2e61a3361514f$var$linearScale(input, output) {\n  return value => {\n    if (input[0] === input[1] || output[0] === output[1]) return output[0];\n    const ratio = (output[1] - output[0]) / (input[1] - input[0]);\n    return output[0] + ratio * (value - input[0]);\n  };\n}\nfunction $faa2e61a3361514f$var$getDecimalCount(value) {\n  return (String(value).split('.')[1] || '').length;\n}\nfunction $faa2e61a3361514f$var$roundValue(value, decimalCount) {\n  const rounder = Math.pow(10, decimalCount);\n  return Math.round(value * rounder) / rounder;\n}\nconst $faa2e61a3361514f$export$be92b6f5f03c0fe9 = $faa2e61a3361514f$export$472062a354075cee;\nconst $faa2e61a3361514f$export$13921ac0cc260818 = $faa2e61a3361514f$export$105594979f116971;\nconst $faa2e61a3361514f$export$9a58ef0d7ad3278c = $faa2e61a3361514f$export$a5cf38a7a000fe77;\nconst $faa2e61a3361514f$export$6521433ed15a34db = $faa2e61a3361514f$export$2c1b491743890dec;\nexport { $faa2e61a3361514f$export$ef72632d7b901f97 as createSliderScope, $faa2e61a3361514f$export$472062a354075cee as Slider, $faa2e61a3361514f$export$105594979f116971 as SliderTrack, $faa2e61a3361514f$export$a5cf38a7a000fe77 as SliderRange, $faa2e61a3361514f$export$2c1b491743890dec as SliderThumb, $faa2e61a3361514f$export$be92b6f5f03c0fe9 as Root, $faa2e61a3361514f$export$13921ac0cc260818 as Track, $faa2e61a3361514f$export$9a58ef0d7ad3278c as Range, $faa2e61a3361514f$export$6521433ed15a34db as Thumb };","map":{"version":3,"mappings":"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","names":["PAGE_KEYS","ARROW_KEYS","BACK_KEYS","SLIDER_NAME","Collection","useCollection","createCollectionScope","createCollection","createSliderContext","createSliderScope","createContextScope","SliderProvider","useSliderContext","Slider","React","props","forwardedRef","name","min","max","step","orientation","disabled","minStepsBetweenThumbs","defaultValue","value","onValueChange","onValueCommit","inverted","sliderProps","slider","setSlider","composedRefs","useComposedRefs","node","thumbRefs","Set","valueIndexToChangeRef","isHorizontal","isFormControl","Boolean","closest","SliderOrientation","SliderHorizontal","SliderVertical","values","setValues","useControllableState","prop","defaultProp","onChange","thumbs","current","focus","valuesBeforeSlideStartRef","handleSlideStart","closestIndex","getClosestValueIndex","updateValues","handleSlideMove","handleSlideEnd","prevValue","nextValue","hasChanged","atIndex","commit","decimalCount","getDecimalCount","snapToStep","roundValue","Math","round","clamp","prevValues","nextValues","getNextSortedValues","hasMinStepsBetweenValues","indexOf","String","$g1Vy2$createElement","$faa2e61a3361514f$var$SliderProvider","scope","__scopeSlider","$faa2e61a3361514f$var$Collection","Provider","Slot","$g1Vy2$babelruntimehelpersesmextends","undefined","ref","onPointerDown","composeEventHandlers","onSlideStart","onSlideMove","onSlideEnd","onHomeKeyDown","onEndKeyDown","length","onStepKeyDown","_ref","event","direction","stepDirection","isPageKey","includes","key","isSkipKey","shiftKey","multiplier","stepInDirection","map","index","$faa2e61a3361514f$var$BubbleInput","Object","displayName","SliderOrientationProvider","useSliderOrientationContext","startEdge","endEdge","size","dir","rectRef","useDirection","isDirectionLTR","isSlidingFromLeft","getValueFromPointer","pointerPosition","rect","getBoundingClientRect","input","width","output","linearScale","left","$faa2e61a3361514f$var$SliderOrientationProvider","$faa2e61a3361514f$var$SliderImpl","style","clientX","slideDirection","isBackKey","sliderRef","isSlidingFromBottom","height","top","clientY","SliderImpl","context","$g1Vy2$Primitive","span","onKeyDown","preventDefault","concat","target","setPointerCapture","pointerId","has","onPointerMove","hasPointerCapture","onPointerUp","releasePointerCapture","TRACK_NAME","SliderTrack","trackProps","RANGE_NAME","SliderRange","rangeProps","valuesCount","percentages","convertValueToPercentage","offsetStart","offsetEnd","THUMB_NAME","SliderThumb","getItems","thumb","setThumb","findIndex","item","$faa2e61a3361514f$var$SliderThumbImpl","SliderThumbImpl","thumbProps","useSize","percent","label","getLabel","orientationSize","thumbInBoundsOffset","getThumbInBoundsOffset","add","delete","transform","position","ItemSlot","role","tabIndex","display","onFocus","BubbleInput","inputProps","usePrevious","inputProto","window","HTMLInputElement","prototype","descriptor","getOwnPropertyDescriptor","setValue","set","Event","bubbles","call","dispatchEvent","$faa2e61a3361514f$var$getNextSortedValues","sort","a","b","$faa2e61a3361514f$var$convertValueToPercentage","maxSteps","percentPerStep","$faa2e61a3361514f$var$getLabel","totalValues","$faa2e61a3361514f$var$getClosestValueIndex","distances","abs","closestDistance","$faa2e61a3361514f$var$getThumbInBoundsOffset","halfWidth","halfPercent","offset","getStepsBetweenValues","$faa2e61a3361514f$var$getStepsBetweenValues","slice","$faa2e61a3361514f$var$hasMinStepsBetweenValues","minStepsBetweenValues","stepsBetweenValues","actualMinStepsBetweenValues","$faa2e61a3361514f$var$linearScale","ratio","$faa2e61a3361514f$var$getDecimalCount","split","$faa2e61a3361514f$var$roundValue","rounder","pow","Root","Track","Range","Thumb"],"sources":["/home/dev/Desktop/bijil/car-rental-react-main (1)/car-rental-react-main/node_modules/@radix-ui/react-slider/dist/packages/react/slider/src/Slider.tsx"],"sourcesContent":["import * as React from 'react';\nimport { clamp } from '@radix-ui/number';\nimport { composeEventHandlers } from '@radix-ui/primitive';\nimport { useComposedRefs } from '@radix-ui/react-compose-refs';\nimport { createContextScope } from '@radix-ui/react-context';\nimport { useControllableState } from '@radix-ui/react-use-controllable-state';\nimport { useDirection } from '@radix-ui/react-direction';\nimport { usePrevious } from '@radix-ui/react-use-previous';\nimport { useSize } from '@radix-ui/react-use-size';\nimport { Primitive } from '@radix-ui/react-primitive';\nimport { createCollection } from '@radix-ui/react-collection';\n\nimport type * as Radix from '@radix-ui/react-primitive';\nimport type { Scope } from '@radix-ui/react-context';\n\ntype Direction = 'ltr' | 'rtl';\n\nconst PAGE_KEYS = ['PageUp', 'PageDown'];\nconst ARROW_KEYS = ['ArrowUp', 'ArrowDown', 'ArrowLeft', 'ArrowRight'];\n\ntype SlideDirection = 'from-left' | 'from-right' | 'from-bottom' | 'from-top';\nconst BACK_KEYS: Record<SlideDirection, string[]> = {\n  'from-left': ['Home', 'PageDown', 'ArrowDown', 'ArrowLeft'],\n  'from-right': ['Home', 'PageDown', 'ArrowDown', 'ArrowRight'],\n  'from-bottom': ['Home', 'PageDown', 'ArrowDown', 'ArrowLeft'],\n  'from-top': ['Home', 'PageDown', 'ArrowUp', 'ArrowLeft'],\n};\n\n/* -------------------------------------------------------------------------------------------------\n * Slider\n * -----------------------------------------------------------------------------------------------*/\n\nconst SLIDER_NAME = 'Slider';\n\nconst [Collection, useCollection, createCollectionScope] =\n  createCollection<SliderThumbElement>(SLIDER_NAME);\n\ntype ScopedProps<P> = P & { __scopeSlider?: Scope };\nconst [createSliderContext, createSliderScope] = createContextScope(SLIDER_NAME, [\n  createCollectionScope,\n]);\n\ntype SliderContextValue = {\n  disabled?: boolean;\n  min: number;\n  max: number;\n  values: number[];\n  valueIndexToChangeRef: React.MutableRefObject<number>;\n  thumbs: Set<SliderThumbElement>;\n  orientation: SliderProps['orientation'];\n};\n\nconst [SliderProvider, useSliderContext] = createSliderContext<SliderContextValue>(SLIDER_NAME);\n\ntype SliderElement = SliderHorizontalElement | SliderVerticalElement;\ninterface SliderProps\n  extends Omit<\n    SliderHorizontalProps | SliderVerticalProps,\n    keyof SliderOrientationPrivateProps | 'defaultValue'\n  > {\n  name?: string;\n  disabled?: boolean;\n  orientation?: React.AriaAttributes['aria-orientation'];\n  dir?: Direction;\n  min?: number;\n  max?: number;\n  step?: number;\n  minStepsBetweenThumbs?: number;\n  value?: number[];\n  defaultValue?: number[];\n  onValueChange?(value: number[]): void;\n  onValueCommit?(value: number[]): void;\n  inverted?: boolean;\n}\n\nconst Slider = React.forwardRef<SliderElement, SliderProps>(\n  (props: ScopedProps<SliderProps>, forwardedRef) => {\n    const {\n      name,\n      min = 0,\n      max = 100,\n      step = 1,\n      orientation = 'horizontal',\n      disabled = false,\n      minStepsBetweenThumbs = 0,\n      defaultValue = [min],\n      value,\n      onValueChange = () => {},\n      onValueCommit = () => {},\n      inverted = false,\n      ...sliderProps\n    } = props;\n    const [slider, setSlider] = React.useState<HTMLSpanElement | null>(null);\n    const composedRefs = useComposedRefs(forwardedRef, (node) => setSlider(node));\n    const thumbRefs = React.useRef<SliderContextValue['thumbs']>(new Set());\n    const valueIndexToChangeRef = React.useRef<number>(0);\n    const isHorizontal = orientation === 'horizontal';\n    // We set this to true by default so that events bubble to forms without JS (SSR)\n    const isFormControl = slider ? Boolean(slider.closest('form')) : true;\n    const SliderOrientation = isHorizontal ? SliderHorizontal : SliderVertical;\n\n    const [values = [], setValues] = useControllableState({\n      prop: value,\n      defaultProp: defaultValue,\n      onChange: (value) => {\n        const thumbs = [...thumbRefs.current];\n        thumbs[valueIndexToChangeRef.current]?.focus();\n        onValueChange(value);\n      },\n    });\n    const valuesBeforeSlideStartRef = React.useRef(values);\n\n    function handleSlideStart(value: number) {\n      const closestIndex = getClosestValueIndex(values, value);\n      updateValues(value, closestIndex);\n    }\n\n    function handleSlideMove(value: number) {\n      updateValues(value, valueIndexToChangeRef.current);\n    }\n\n    function handleSlideEnd() {\n      const prevValue = valuesBeforeSlideStartRef.current[valueIndexToChangeRef.current];\n      const nextValue = values[valueIndexToChangeRef.current];\n      const hasChanged = nextValue !== prevValue;\n      if (hasChanged) onValueCommit(values);\n    }\n\n    function updateValues(value: number, atIndex: number, { commit } = { commit: false }) {\n      const decimalCount = getDecimalCount(step);\n      const snapToStep = roundValue(Math.round((value - min) / step) * step + min, decimalCount);\n      const nextValue = clamp(snapToStep, [min, max]);\n\n      setValues((prevValues = []) => {\n        const nextValues = getNextSortedValues(prevValues, nextValue, atIndex);\n        if (hasMinStepsBetweenValues(nextValues, minStepsBetweenThumbs * step)) {\n          valueIndexToChangeRef.current = nextValues.indexOf(nextValue);\n          const hasChanged = String(nextValues) !== String(prevValues);\n          if (hasChanged && commit) onValueCommit(nextValues);\n          return hasChanged ? nextValues : prevValues;\n        } else {\n          return prevValues;\n        }\n      });\n    }\n\n    return (\n      <SliderProvider\n        scope={props.__scopeSlider}\n        disabled={disabled}\n        min={min}\n        max={max}\n        valueIndexToChangeRef={valueIndexToChangeRef}\n        thumbs={thumbRefs.current}\n        values={values}\n        orientation={orientation}\n      >\n        <Collection.Provider scope={props.__scopeSlider}>\n          <Collection.Slot scope={props.__scopeSlider}>\n            <SliderOrientation\n              aria-disabled={disabled}\n              data-disabled={disabled ? '' : undefined}\n              {...sliderProps}\n              ref={composedRefs}\n              onPointerDown={composeEventHandlers(sliderProps.onPointerDown, () => {\n                if (!disabled) valuesBeforeSlideStartRef.current = values;\n              })}\n              min={min}\n              max={max}\n              inverted={inverted}\n              onSlideStart={disabled ? undefined : handleSlideStart}\n              onSlideMove={disabled ? undefined : handleSlideMove}\n              onSlideEnd={disabled ? undefined : handleSlideEnd}\n              onHomeKeyDown={() => !disabled && updateValues(min, 0, { commit: true })}\n              onEndKeyDown={() =>\n                !disabled && updateValues(max, values.length - 1, { commit: true })\n              }\n              onStepKeyDown={({ event, direction: stepDirection }) => {\n                if (!disabled) {\n                  const isPageKey = PAGE_KEYS.includes(event.key);\n                  const isSkipKey = isPageKey || (event.shiftKey && ARROW_KEYS.includes(event.key));\n                  const multiplier = isSkipKey ? 10 : 1;\n                  const atIndex = valueIndexToChangeRef.current;\n                  const value = values[atIndex];\n                  const stepInDirection = step * multiplier * stepDirection;\n                  updateValues(value + stepInDirection, atIndex, { commit: true });\n                }\n              }}\n            />\n          </Collection.Slot>\n        </Collection.Provider>\n        {isFormControl &&\n          values.map((value, index) => (\n            <BubbleInput\n              key={index}\n              name={name ? name + (values.length > 1 ? '[]' : '') : undefined}\n              value={value}\n            />\n          ))}\n      </SliderProvider>\n    );\n  }\n);\n\nSlider.displayName = SLIDER_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * SliderHorizontal\n * -----------------------------------------------------------------------------------------------*/\n\ntype Side = 'top' | 'right' | 'bottom' | 'left';\n\nconst [SliderOrientationProvider, useSliderOrientationContext] = createSliderContext<{\n  startEdge: Side;\n  endEdge: Side;\n  size: keyof NonNullable<ReturnType<typeof useSize>>;\n  direction: number;\n}>(SLIDER_NAME, {\n  startEdge: 'left',\n  endEdge: 'right',\n  size: 'width',\n  direction: 1,\n});\n\ntype SliderOrientationPrivateProps = {\n  min: number;\n  max: number;\n  inverted: boolean;\n  onSlideStart?(value: number): void;\n  onSlideMove?(value: number): void;\n  onSlideEnd?(): void;\n  onHomeKeyDown(event: React.KeyboardEvent): void;\n  onEndKeyDown(event: React.KeyboardEvent): void;\n  onStepKeyDown(step: { event: React.KeyboardEvent; direction: number }): void;\n};\ninterface SliderOrientationProps\n  extends Omit<SliderImplProps, keyof SliderImplPrivateProps>,\n    SliderOrientationPrivateProps {}\n\ntype SliderHorizontalElement = SliderImplElement;\ninterface SliderHorizontalProps extends SliderOrientationProps {\n  dir?: Direction;\n}\n\nconst SliderHorizontal = React.forwardRef<SliderHorizontalElement, SliderHorizontalProps>(\n  (props: ScopedProps<SliderHorizontalProps>, forwardedRef) => {\n    const {\n      min,\n      max,\n      dir,\n      inverted,\n      onSlideStart,\n      onSlideMove,\n      onSlideEnd,\n      onStepKeyDown,\n      ...sliderProps\n    } = props;\n    const [slider, setSlider] = React.useState<SliderImplElement | null>(null);\n    const composedRefs = useComposedRefs(forwardedRef, (node) => setSlider(node));\n    const rectRef = React.useRef<ClientRect>();\n    const direction = useDirection(dir);\n    const isDirectionLTR = direction === 'ltr';\n    const isSlidingFromLeft = (isDirectionLTR && !inverted) || (!isDirectionLTR && inverted);\n\n    function getValueFromPointer(pointerPosition: number) {\n      const rect = rectRef.current || slider!.getBoundingClientRect();\n      const input: [number, number] = [0, rect.width];\n      const output: [number, number] = isSlidingFromLeft ? [min, max] : [max, min];\n      const value = linearScale(input, output);\n\n      rectRef.current = rect;\n      return value(pointerPosition - rect.left);\n    }\n\n    return (\n      <SliderOrientationProvider\n        scope={props.__scopeSlider}\n        startEdge={isSlidingFromLeft ? 'left' : 'right'}\n        endEdge={isSlidingFromLeft ? 'right' : 'left'}\n        direction={isSlidingFromLeft ? 1 : -1}\n        size=\"width\"\n      >\n        <SliderImpl\n          dir={direction}\n          data-orientation=\"horizontal\"\n          {...sliderProps}\n          ref={composedRefs}\n          style={{\n            ...sliderProps.style,\n            ['--radix-slider-thumb-transform' as any]: 'translateX(-50%)',\n          }}\n          onSlideStart={(event) => {\n            const value = getValueFromPointer(event.clientX);\n            onSlideStart?.(value);\n          }}\n          onSlideMove={(event) => {\n            const value = getValueFromPointer(event.clientX);\n            onSlideMove?.(value);\n          }}\n          onSlideEnd={() => {\n            rectRef.current = undefined;\n            onSlideEnd?.();\n          }}\n          onStepKeyDown={(event) => {\n            const slideDirection = isSlidingFromLeft ? 'from-left' : 'from-right';\n            const isBackKey = BACK_KEYS[slideDirection].includes(event.key);\n            onStepKeyDown?.({ event, direction: isBackKey ? -1 : 1 });\n          }}\n        />\n      </SliderOrientationProvider>\n    );\n  }\n);\n\n/* -------------------------------------------------------------------------------------------------\n * SliderVertical\n * -----------------------------------------------------------------------------------------------*/\n\ntype SliderVerticalElement = SliderImplElement;\ninterface SliderVerticalProps extends SliderOrientationProps {}\n\nconst SliderVertical = React.forwardRef<SliderVerticalElement, SliderVerticalProps>(\n  (props: ScopedProps<SliderVerticalProps>, forwardedRef) => {\n    const {\n      min,\n      max,\n      inverted,\n      onSlideStart,\n      onSlideMove,\n      onSlideEnd,\n      onStepKeyDown,\n      ...sliderProps\n    } = props;\n    const sliderRef = React.useRef<SliderImplElement>(null);\n    const ref = useComposedRefs(forwardedRef, sliderRef);\n    const rectRef = React.useRef<ClientRect>();\n    const isSlidingFromBottom = !inverted;\n\n    function getValueFromPointer(pointerPosition: number) {\n      const rect = rectRef.current || sliderRef.current!.getBoundingClientRect();\n      const input: [number, number] = [0, rect.height];\n      const output: [number, number] = isSlidingFromBottom ? [max, min] : [min, max];\n      const value = linearScale(input, output);\n\n      rectRef.current = rect;\n      return value(pointerPosition - rect.top);\n    }\n\n    return (\n      <SliderOrientationProvider\n        scope={props.__scopeSlider}\n        startEdge={isSlidingFromBottom ? 'bottom' : 'top'}\n        endEdge={isSlidingFromBottom ? 'top' : 'bottom'}\n        size=\"height\"\n        direction={isSlidingFromBottom ? 1 : -1}\n      >\n        <SliderImpl\n          data-orientation=\"vertical\"\n          {...sliderProps}\n          ref={ref}\n          style={{\n            ...sliderProps.style,\n            ['--radix-slider-thumb-transform' as any]: 'translateY(50%)',\n          }}\n          onSlideStart={(event) => {\n            const value = getValueFromPointer(event.clientY);\n            onSlideStart?.(value);\n          }}\n          onSlideMove={(event) => {\n            const value = getValueFromPointer(event.clientY);\n            onSlideMove?.(value);\n          }}\n          onSlideEnd={() => {\n            rectRef.current = undefined;\n            onSlideEnd?.();\n          }}\n          onStepKeyDown={(event) => {\n            const slideDirection = isSlidingFromBottom ? 'from-bottom' : 'from-top';\n            const isBackKey = BACK_KEYS[slideDirection].includes(event.key);\n            onStepKeyDown?.({ event, direction: isBackKey ? -1 : 1 });\n          }}\n        />\n      </SliderOrientationProvider>\n    );\n  }\n);\n\n/* -------------------------------------------------------------------------------------------------\n * SliderImpl\n * -----------------------------------------------------------------------------------------------*/\n\ntype SliderImplElement = React.ElementRef<typeof Primitive.span>;\ntype PrimitiveDivProps = Radix.ComponentPropsWithoutRef<typeof Primitive.div>;\ntype SliderImplPrivateProps = {\n  onSlideStart(event: React.PointerEvent): void;\n  onSlideMove(event: React.PointerEvent): void;\n  onSlideEnd(event: React.PointerEvent): void;\n  onHomeKeyDown(event: React.KeyboardEvent): void;\n  onEndKeyDown(event: React.KeyboardEvent): void;\n  onStepKeyDown(event: React.KeyboardEvent): void;\n};\ninterface SliderImplProps extends PrimitiveDivProps, SliderImplPrivateProps {}\n\nconst SliderImpl = React.forwardRef<SliderImplElement, SliderImplProps>(\n  (props: ScopedProps<SliderImplProps>, forwardedRef) => {\n    const {\n      __scopeSlider,\n      onSlideStart,\n      onSlideMove,\n      onSlideEnd,\n      onHomeKeyDown,\n      onEndKeyDown,\n      onStepKeyDown,\n      ...sliderProps\n    } = props;\n    const context = useSliderContext(SLIDER_NAME, __scopeSlider);\n\n    return (\n      <Primitive.span\n        {...sliderProps}\n        ref={forwardedRef}\n        onKeyDown={composeEventHandlers(props.onKeyDown, (event) => {\n          if (event.key === 'Home') {\n            onHomeKeyDown(event);\n            // Prevent scrolling to page start\n            event.preventDefault();\n          } else if (event.key === 'End') {\n            onEndKeyDown(event);\n            // Prevent scrolling to page end\n            event.preventDefault();\n          } else if (PAGE_KEYS.concat(ARROW_KEYS).includes(event.key)) {\n            onStepKeyDown(event);\n            // Prevent scrolling for directional key presses\n            event.preventDefault();\n          }\n        })}\n        onPointerDown={composeEventHandlers(props.onPointerDown, (event) => {\n          const target = event.target as HTMLElement;\n          target.setPointerCapture(event.pointerId);\n          // Prevent browser focus behaviour because we focus a thumb manually when values change.\n          event.preventDefault();\n          // Touch devices have a delay before focusing so won't focus if touch immediately moves\n          // away from target (sliding). We want thumb to focus regardless.\n          if (context.thumbs.has(target)) {\n            target.focus();\n          } else {\n            onSlideStart(event);\n          }\n        })}\n        onPointerMove={composeEventHandlers(props.onPointerMove, (event) => {\n          const target = event.target as HTMLElement;\n          if (target.hasPointerCapture(event.pointerId)) onSlideMove(event);\n        })}\n        onPointerUp={composeEventHandlers(props.onPointerUp, (event) => {\n          const target = event.target as HTMLElement;\n          if (target.hasPointerCapture(event.pointerId)) {\n            target.releasePointerCapture(event.pointerId);\n            onSlideEnd(event);\n          }\n        })}\n      />\n    );\n  }\n);\n\n/* -------------------------------------------------------------------------------------------------\n * SliderTrack\n * -----------------------------------------------------------------------------------------------*/\n\nconst TRACK_NAME = 'SliderTrack';\n\ntype SliderTrackElement = React.ElementRef<typeof Primitive.span>;\ntype PrimitiveSpanProps = Radix.ComponentPropsWithoutRef<typeof Primitive.span>;\ninterface SliderTrackProps extends PrimitiveSpanProps {}\n\nconst SliderTrack = React.forwardRef<SliderTrackElement, SliderTrackProps>(\n  (props: ScopedProps<SliderTrackProps>, forwardedRef) => {\n    const { __scopeSlider, ...trackProps } = props;\n    const context = useSliderContext(TRACK_NAME, __scopeSlider);\n    return (\n      <Primitive.span\n        data-disabled={context.disabled ? '' : undefined}\n        data-orientation={context.orientation}\n        {...trackProps}\n        ref={forwardedRef}\n      />\n    );\n  }\n);\n\nSliderTrack.displayName = TRACK_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * SliderRange\n * -----------------------------------------------------------------------------------------------*/\n\nconst RANGE_NAME = 'SliderRange';\n\ntype SliderRangeElement = React.ElementRef<typeof Primitive.span>;\ninterface SliderRangeProps extends PrimitiveSpanProps {}\n\nconst SliderRange = React.forwardRef<SliderRangeElement, SliderRangeProps>(\n  (props: ScopedProps<SliderRangeProps>, forwardedRef) => {\n    const { __scopeSlider, ...rangeProps } = props;\n    const context = useSliderContext(RANGE_NAME, __scopeSlider);\n    const orientation = useSliderOrientationContext(RANGE_NAME, __scopeSlider);\n    const ref = React.useRef<HTMLSpanElement>(null);\n    const composedRefs = useComposedRefs(forwardedRef, ref);\n    const valuesCount = context.values.length;\n    const percentages = context.values.map((value) =>\n      convertValueToPercentage(value, context.min, context.max)\n    );\n    const offsetStart = valuesCount > 1 ? Math.min(...percentages) : 0;\n    const offsetEnd = 100 - Math.max(...percentages);\n\n    return (\n      <Primitive.span\n        data-orientation={context.orientation}\n        data-disabled={context.disabled ? '' : undefined}\n        {...rangeProps}\n        ref={composedRefs}\n        style={{\n          ...props.style,\n          [orientation.startEdge]: offsetStart + '%',\n          [orientation.endEdge]: offsetEnd + '%',\n        }}\n      />\n    );\n  }\n);\n\nSliderRange.displayName = RANGE_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * SliderThumb\n * -----------------------------------------------------------------------------------------------*/\n\nconst THUMB_NAME = 'SliderThumb';\n\ntype SliderThumbElement = SliderThumbImplElement;\ninterface SliderThumbProps extends Omit<SliderThumbImplProps, 'index'> {}\n\nconst SliderThumb = React.forwardRef<SliderThumbElement, SliderThumbProps>(\n  (props: ScopedProps<SliderThumbProps>, forwardedRef) => {\n    const getItems = useCollection(props.__scopeSlider);\n    const [thumb, setThumb] = React.useState<SliderThumbImplElement | null>(null);\n    const composedRefs = useComposedRefs(forwardedRef, (node) => setThumb(node));\n    const index = React.useMemo(\n      () => (thumb ? getItems().findIndex((item) => item.ref.current === thumb) : -1),\n      [getItems, thumb]\n    );\n    return <SliderThumbImpl {...props} ref={composedRefs} index={index} />;\n  }\n);\n\ntype SliderThumbImplElement = React.ElementRef<typeof Primitive.span>;\ninterface SliderThumbImplProps extends PrimitiveSpanProps {\n  index: number;\n}\n\nconst SliderThumbImpl = React.forwardRef<SliderThumbImplElement, SliderThumbImplProps>(\n  (props: ScopedProps<SliderThumbImplProps>, forwardedRef) => {\n    const { __scopeSlider, index, ...thumbProps } = props;\n    const context = useSliderContext(THUMB_NAME, __scopeSlider);\n    const orientation = useSliderOrientationContext(THUMB_NAME, __scopeSlider);\n    const [thumb, setThumb] = React.useState<HTMLSpanElement | null>(null);\n    const composedRefs = useComposedRefs(forwardedRef, (node) => setThumb(node));\n    const size = useSize(thumb);\n    // We cast because index could be `-1` which would return undefined\n    const value = context.values[index] as number | undefined;\n    const percent =\n      value === undefined ? 0 : convertValueToPercentage(value, context.min, context.max);\n    const label = getLabel(index, context.values.length);\n    const orientationSize = size?.[orientation.size];\n    const thumbInBoundsOffset = orientationSize\n      ? getThumbInBoundsOffset(orientationSize, percent, orientation.direction)\n      : 0;\n\n    React.useEffect(() => {\n      if (thumb) {\n        context.thumbs.add(thumb);\n        return () => {\n          context.thumbs.delete(thumb);\n        };\n      }\n    }, [thumb, context.thumbs]);\n\n    return (\n      <span\n        style={{\n          transform: 'var(--radix-slider-thumb-transform)',\n          position: 'absolute',\n          [orientation.startEdge]: `calc(${percent}% + ${thumbInBoundsOffset}px)`,\n        }}\n      >\n        <Collection.ItemSlot scope={props.__scopeSlider}>\n          <Primitive.span\n            role=\"slider\"\n            aria-label={props['aria-label'] || label}\n            aria-valuemin={context.min}\n            aria-valuenow={value}\n            aria-valuemax={context.max}\n            aria-orientation={context.orientation}\n            data-orientation={context.orientation}\n            data-disabled={context.disabled ? '' : undefined}\n            tabIndex={context.disabled ? undefined : 0}\n            {...thumbProps}\n            ref={composedRefs}\n            /**\n             * There will be no value on initial render while we work out the index so we hide thumbs\n             * without a value, otherwise SSR will render them in the wrong position before they\n             * snap into the correct position during hydration which would be visually jarring for\n             * slower connections.\n             */\n            style={value === undefined ? { display: 'none' } : props.style}\n            onFocus={composeEventHandlers(props.onFocus, () => {\n              context.valueIndexToChangeRef.current = index;\n            })}\n          />\n        </Collection.ItemSlot>\n      </span>\n    );\n  }\n);\n\nSliderThumb.displayName = THUMB_NAME;\n\n/* -----------------------------------------------------------------------------------------------*/\n\nconst BubbleInput = (props: Radix.ComponentPropsWithoutRef<'input'>) => {\n  const { value, ...inputProps } = props;\n  const ref = React.useRef<HTMLInputElement>(null);\n  const prevValue = usePrevious(value);\n\n  // Bubble value change to parents (e.g form change event)\n  React.useEffect(() => {\n    const input = ref.current!;\n    const inputProto = window.HTMLInputElement.prototype;\n    const descriptor = Object.getOwnPropertyDescriptor(inputProto, 'value') as PropertyDescriptor;\n    const setValue = descriptor.set;\n    if (prevValue !== value && setValue) {\n      const event = new Event('input', { bubbles: true });\n      setValue.call(input, value);\n      input.dispatchEvent(event);\n    }\n  }, [prevValue, value]);\n\n  /**\n   * We purposefully do not use `type=\"hidden\"` here otherwise forms that\n   * wrap it will not be able to access its value via the FormData API.\n   *\n   * We purposefully do not add the `value` attribute here to allow the value\n   * to be set programatically and bubble to any parent form `onChange` event.\n   * Adding the `value` will cause React to consider the programatic\n   * dispatch a duplicate and it will get swallowed.\n   */\n  return <input style={{ display: 'none' }} {...inputProps} ref={ref} defaultValue={value} />;\n};\n\nfunction getNextSortedValues(prevValues: number[] = [], nextValue: number, atIndex: number) {\n  const nextValues = [...prevValues];\n  nextValues[atIndex] = nextValue;\n  return nextValues.sort((a, b) => a - b);\n}\n\nfunction convertValueToPercentage(value: number, min: number, max: number) {\n  const maxSteps = max - min;\n  const percentPerStep = 100 / maxSteps;\n  return percentPerStep * (value - min);\n}\n\n/**\n * Returns a label for each thumb when there are two or more thumbs\n */\nfunction getLabel(index: number, totalValues: number) {\n  if (totalValues > 2) {\n    return `Value ${index + 1} of ${totalValues}`;\n  } else if (totalValues === 2) {\n    return ['Minimum', 'Maximum'][index];\n  } else {\n    return undefined;\n  }\n}\n\n/**\n * Given a `values` array and a `nextValue`, determine which value in\n * the array is closest to `nextValue` and return its index.\n *\n * @example\n * // returns 1\n * getClosestValueIndex([10, 30], 25);\n */\nfunction getClosestValueIndex(values: number[], nextValue: number) {\n  if (values.length === 1) return 0;\n  const distances = values.map((value) => Math.abs(value - nextValue));\n  const closestDistance = Math.min(...distances);\n  return distances.indexOf(closestDistance);\n}\n\n/**\n * Offsets the thumb centre point while sliding to ensure it remains\n * within the bounds of the slider when reaching the edges\n */\nfunction getThumbInBoundsOffset(width: number, left: number, direction: number) {\n  const halfWidth = width / 2;\n  const halfPercent = 50;\n  const offset = linearScale([0, halfPercent], [0, halfWidth]);\n  return (halfWidth - offset(left) * direction) * direction;\n}\n\n/**\n * Gets an array of steps between each value.\n *\n * @example\n * // returns [1, 9]\n * getStepsBetweenValues([10, 11, 20]);\n */\nfunction getStepsBetweenValues(values: number[]) {\n  return values.slice(0, -1).map((value, index) => values[index + 1] - value);\n}\n\n/**\n * Verifies the minimum steps between all values is greater than or equal\n * to the expected minimum steps.\n *\n * @example\n * // returns false\n * hasMinStepsBetweenValues([1,2,3], 2);\n *\n * @example\n * // returns true\n * hasMinStepsBetweenValues([1,2,3], 1);\n */\nfunction hasMinStepsBetweenValues(values: number[], minStepsBetweenValues: number) {\n  if (minStepsBetweenValues > 0) {\n    const stepsBetweenValues = getStepsBetweenValues(values);\n    const actualMinStepsBetweenValues = Math.min(...stepsBetweenValues);\n    return actualMinStepsBetweenValues >= minStepsBetweenValues;\n  }\n  return true;\n}\n\n// https://github.com/tmcw-up-for-adoption/simple-linear-scale/blob/master/index.js\nfunction linearScale(input: readonly [number, number], output: readonly [number, number]) {\n  return (value: number) => {\n    if (input[0] === input[1] || output[0] === output[1]) return output[0];\n    const ratio = (output[1] - output[0]) / (input[1] - input[0]);\n    return output[0] + ratio * (value - input[0]);\n  };\n}\n\nfunction getDecimalCount(value: number) {\n  return (String(value).split('.')[1] || '').length;\n}\n\nfunction roundValue(value: number, decimalCount: number) {\n  const rounder = Math.pow(10, decimalCount);\n  return Math.round(value * rounder) / rounder;\n}\n\nconst Root = Slider;\nconst Track = SliderTrack;\nconst Range = SliderRange;\nconst Thumb = SliderThumb;\n\nexport {\n  createSliderScope,\n  //\n  Slider,\n  SliderTrack,\n  SliderRange,\n  SliderThumb,\n  //\n  Root,\n  Track,\n  Range,\n  Thumb,\n};\nexport type { SliderProps, SliderTrackProps, SliderRangeProps, SliderThumbProps };\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}