{"ast":null,"code":"import { FILTER_ACTION_TYPES } from \"./filterActionTypes\";\nimport { getVehiclesMaxPricePerDay, getVehiclesMinPricePerDay } from \"./lib/vehicles\";\nconst maxPrice = getVehiclesMaxPricePerDay();\nconst minPrice = getVehiclesMinPricePerDay();\nconst INITIAL_STATE = {\n  selectedBrands: [],\n  selectedColors: [],\n  price: maxPrice,\n  minPrice,\n  maxPrice\n};\nfunction filtersReducer(state, action) {\n  const {\n    type,\n    payload\n  } = action;\n  switch (type) {\n    case FILTER_ACTION_TYPES.TOGGLE_BRAND_SELECTION:\n      const brandIsSelected = state.selectedBrands.find(currentBrand => currentBrand === payload.brand);\n      const updatedBrandSelection = brandIsSelected ? state.selectedBrands.filter(currentBrand => currentBrand !== payload.brand) : [...state.selectedBrands, payload.brand];\n      return {\n        ...state,\n        selectedBrands: updatedBrandSelection\n      };\n    case FILTER_ACTION_TYPES.TOGGLE_COLOR_SELECTION:\n      const colorIsSelected = state.selectedColors.find(currentColor => currentColor === payload.color);\n      const updatedColorSelection = colorIsSelected ? state.selectedColors.filter(currentColor => currentColor !== payload.color) : [...state.selectedColors, payload.color];\n      return {\n        ...state,\n        selectedColors: updatedColorSelection\n      };\n    case FILTER_ACTION_TYPES.CHANGE_PRICE:\n      return {\n        ...state,\n        price: payload.price\n      };\n    case FILTER_ACTION_TYPES.RESET_PRICE:\n      return {\n        ...state,\n        price: INITIAL_STATE.price\n      };\n    case FILTER_ACTION_TYPES.CLEAR_SELECTION:\n      return INITIAL_STATE;\n    default:\n      throw new Error(`No case for type ${type} found in filtersReducer`);\n  }\n}\nexport { filtersReducer, INITIAL_STATE };","map":{"version":3,"names":["FILTER_ACTION_TYPES","getVehiclesMaxPricePerDay","getVehiclesMinPricePerDay","maxPrice","minPrice","INITIAL_STATE","selectedBrands","selectedColors","price","filtersReducer","state","action","type","payload","TOGGLE_BRAND_SELECTION","brandIsSelected","find","currentBrand","brand","updatedBrandSelection","filter","TOGGLE_COLOR_SELECTION","colorIsSelected","currentColor","color","updatedColorSelection","CHANGE_PRICE","RESET_PRICE","CLEAR_SELECTION","Error"],"sources":["/home/dev/Desktop/bijil/car-rental-react-main (1)/car-rental-react-main/src/filtersReducer.js"],"sourcesContent":["import { FILTER_ACTION_TYPES } from \"./filterActionTypes\";\n\nimport {\n  getVehiclesMaxPricePerDay,\n  getVehiclesMinPricePerDay,\n} from \"./lib/vehicles\";\n\nconst maxPrice = getVehiclesMaxPricePerDay();\nconst minPrice = getVehiclesMinPricePerDay();\n\nconst INITIAL_STATE = {\n  selectedBrands: [],\n  selectedColors: [],\n  price: maxPrice,\n  minPrice,\n  maxPrice,\n};\n\nfunction filtersReducer(state, action) {\n  const { type, payload } = action;\n\n  switch (type) {\n    case FILTER_ACTION_TYPES.TOGGLE_BRAND_SELECTION:\n      const brandIsSelected = state.selectedBrands.find(\n        (currentBrand) => currentBrand === payload.brand\n      );\n      const updatedBrandSelection = brandIsSelected\n        ? state.selectedBrands.filter(\n            (currentBrand) => currentBrand !== payload.brand\n          )\n        : [...state.selectedBrands, payload.brand];\n\n      return {\n        ...state,\n        selectedBrands: updatedBrandSelection,\n      };\n    case FILTER_ACTION_TYPES.TOGGLE_COLOR_SELECTION:\n      const colorIsSelected = state.selectedColors.find(\n        (currentColor) => currentColor === payload.color\n      );\n      const updatedColorSelection = colorIsSelected\n        ? state.selectedColors.filter(\n            (currentColor) => currentColor !== payload.color\n          )\n        : [...state.selectedColors, payload.color];\n\n      return {\n        ...state,\n        selectedColors: updatedColorSelection,\n      };\n\n    case FILTER_ACTION_TYPES.CHANGE_PRICE:\n      return {\n        ...state,\n        price: payload.price,\n      };\n\n    case FILTER_ACTION_TYPES.RESET_PRICE:\n      return {\n        ...state,\n        price: INITIAL_STATE.price,\n      };\n\n    case FILTER_ACTION_TYPES.CLEAR_SELECTION:\n      return INITIAL_STATE;\n\n    default:\n      throw new Error(`No case for type ${type} found in filtersReducer`);\n  }\n}\n\nexport { filtersReducer, INITIAL_STATE };\n"],"mappings":"AAAA,SAASA,mBAAmB,QAAQ,qBAAqB;AAEzD,SACEC,yBAAyB,EACzBC,yBAAyB,QACpB,gBAAgB;AAEvB,MAAMC,QAAQ,GAAGF,yBAAyB,EAAE;AAC5C,MAAMG,QAAQ,GAAGF,yBAAyB,EAAE;AAE5C,MAAMG,aAAa,GAAG;EACpBC,cAAc,EAAE,EAAE;EAClBC,cAAc,EAAE,EAAE;EAClBC,KAAK,EAAEL,QAAQ;EACfC,QAAQ;EACRD;AACF,CAAC;AAED,SAASM,cAAcA,CAACC,KAAK,EAAEC,MAAM,EAAE;EACrC,MAAM;IAAEC,IAAI;IAAEC;EAAQ,CAAC,GAAGF,MAAM;EAEhC,QAAQC,IAAI;IACV,KAAKZ,mBAAmB,CAACc,sBAAsB;MAC7C,MAAMC,eAAe,GAAGL,KAAK,CAACJ,cAAc,CAACU,IAAI,CAC9CC,YAAY,IAAKA,YAAY,KAAKJ,OAAO,CAACK,KAAK,CACjD;MACD,MAAMC,qBAAqB,GAAGJ,eAAe,GACzCL,KAAK,CAACJ,cAAc,CAACc,MAAM,CACxBH,YAAY,IAAKA,YAAY,KAAKJ,OAAO,CAACK,KAAK,CACjD,GACD,CAAC,GAAGR,KAAK,CAACJ,cAAc,EAAEO,OAAO,CAACK,KAAK,CAAC;MAE5C,OAAO;QACL,GAAGR,KAAK;QACRJ,cAAc,EAAEa;MAClB,CAAC;IACH,KAAKnB,mBAAmB,CAACqB,sBAAsB;MAC7C,MAAMC,eAAe,GAAGZ,KAAK,CAACH,cAAc,CAACS,IAAI,CAC9CO,YAAY,IAAKA,YAAY,KAAKV,OAAO,CAACW,KAAK,CACjD;MACD,MAAMC,qBAAqB,GAAGH,eAAe,GACzCZ,KAAK,CAACH,cAAc,CAACa,MAAM,CACxBG,YAAY,IAAKA,YAAY,KAAKV,OAAO,CAACW,KAAK,CACjD,GACD,CAAC,GAAGd,KAAK,CAACH,cAAc,EAAEM,OAAO,CAACW,KAAK,CAAC;MAE5C,OAAO;QACL,GAAGd,KAAK;QACRH,cAAc,EAAEkB;MAClB,CAAC;IAEH,KAAKzB,mBAAmB,CAAC0B,YAAY;MACnC,OAAO;QACL,GAAGhB,KAAK;QACRF,KAAK,EAAEK,OAAO,CAACL;MACjB,CAAC;IAEH,KAAKR,mBAAmB,CAAC2B,WAAW;MAClC,OAAO;QACL,GAAGjB,KAAK;QACRF,KAAK,EAAEH,aAAa,CAACG;MACvB,CAAC;IAEH,KAAKR,mBAAmB,CAAC4B,eAAe;MACtC,OAAOvB,aAAa;IAEtB;MACE,MAAM,IAAIwB,KAAK,CAAE,oBAAmBjB,IAAK,0BAAyB,CAAC;EAAC;AAE1E;AAEA,SAASH,cAAc,EAAEJ,aAAa"},"metadata":{},"sourceType":"module","externalDependencies":[]}